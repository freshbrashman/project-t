swagger: '2.0'
info:
  description: プロジェクトTのAPI仕様をまずはざっくりと
  version: 1.0.0
  title: Project-T
host: petstore.swagger.io
basePath: /v2
tags:
  - name: task
    description: タスクを表す
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:
  /task:
    post:
      tags:
        - task
      summary: タスクを新規作成する
      description: ''
      operationId: addNewTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: タスクの初期値があればbodyに指定する。なければ空のタスクを新規作成する
          required: false
          schema:
            $ref: '#/definitions/Task'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - task
      summary: タスクの情報を更新する
      description: ''
      operationId: updateTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 更新したい項目をパラメータのオブジェクトへ指定する
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '405':
          description: Validation exception
  /task/findAll:
    get:
      tags:
        - task
      summary: Find All Tasks
      description: タスク全件取得
      operationId: findTaskAll
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
  '/task/{taskId}':
    get:
      tags:
        - task
      summary: Find task by ID
      description: Returns a single task
      operationId: getTaskById
      produces:
        - application/json
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    post:
      tags:
        - task
      summary: Updates a task with form data
      description: ''
      operationId: updateTaskWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: taskId
          in: path
          description: ID of pet that needs to be updated
          required: true
          type: integer
          format: int64
        - name: title
          in: formData
          description: Updated title of the task
          required: false
          type: string
        - name: description
          in: formData
          description: Updated description of the task
          required: false
          type: string
        - name: status
          in: formData
          description: Updated status of the task
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - task
      summary: Deletes a task
      description: ''
      operationId: deleteTask
      produces:
        - application/json
      parameters:
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
definitions:
  Task:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
        example: 例の件
      content:
        type: string
        example: あの日にあーしたいこうしたい
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
